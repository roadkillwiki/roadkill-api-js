
{
  "x-generator": "NSwag v13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v11.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Roadkill API",
    "version": "3.0"
  },
  "servers": [
    {
      "url": "http://"
    }
  ],
  "paths": {
    "/v3/Authorization/Authenticate": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "operationId": "Authorization_Authenticate",
        "requestBody": {
          "x-name": "authorizationRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Email": {
      "post": {
        "tags": [
          "Email"
        ],
        "operationId": "Email_Send",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "body",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Export/ExportPagesToXml": {
      "post": {
        "tags": [
          "Export"
        ],
        "operationId": "Export_ExportPagesToXml",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Export/ExportPagesVersionsToXml": {
      "post": {
        "tags": [
          "Export"
        ],
        "operationId": "Export_ExportPagesVersionsToXml",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Export/ExportAsSql": {
      "post": {
        "tags": [
          "Export"
        ],
        "operationId": "Export_ExportAsSql",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Export/ExportAttachments": {
      "post": {
        "tags": [
          "Export"
        ],
        "operationId": "Export_ExportAttachments",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Install/CreateTestUser": {
      "post": {
        "tags": [
          "Install"
        ],
        "operationId": "Install_CreateTestUser",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Markdown/ConvertToHtml": {
      "post": {
        "tags": [
          "Markdown"
        ],
        "operationId": "Markdown_ConvertToHtml",
        "requestBody": {
          "x-name": "markDown",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Markdown/UpdateLinksToPage": {
      "post": {
        "tags": [
          "Markdown"
        ],
        "operationId": "Markdown_UpdateLinksToPage",
        "parameters": [
          {
            "name": "oldTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "newTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Pages/{id}": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Gets a single page by its ID.",
        "operationId": "Pages_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the page to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "The page meta information, or a 404 not found if the page cannot be found.\n            No page text is returned, use PageVersions to get this information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Pages/AllPages": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Retrieves all pages in the Roadkill database.",
        "operationId": "Pages_AllPages",
        "responses": {
          "200": {
            "description": "Meta information for all the pages in the database.\n            No page text is returned, use PageVersions to get this information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Pages/AllPagesCreatedBy": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Retrieves all pages created by a particular user.",
        "operationId": "Pages_AllPagesCreatedBy",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username (typically an email address) of the user that created\n            the the pages.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Meta information for all the pages created by the user in the database.\n            No page text is returned, use PageVersions to get this information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Pages/FindHomePage": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Finds the first page in the database with the \"homepage\" tag.",
        "operationId": "Pages_FindHomePage",
        "responses": {
          "200": {
            "description": "The page meta information, or a 404 not found if the page cannot be found.\n            No page text is returned, use PageVersions to get this information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Pages/FindByTitle": {
      "get": {
        "tags": [
          "Pages"
        ],
        "summary": "Finds the first page matching the given page title.",
        "operationId": "Pages_FindByTitle",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "The title of the page to search for (case-insensitive).",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The page meta information, or a 404 not found if the page cannot be found.\n            No page text is returned, use PageVersions to get this information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Pages": {
      "post": {
        "tags": [
          "Pages"
        ],
        "summary": "Add a page to the database using the provided meta information. This will only add\nthe meta information not the page text, use PageVersions to add text for a page.",
        "operationId": "Pages_Add",
        "requestBody": {
          "x-name": "pageRequest",
          "description": "The page information to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A 202 HTTP status with the newly created page, with its generated ID populated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Pages"
        ],
        "summary": "Updates an existing page in the database.",
        "operationId": "Pages_Update",
        "requestBody": {
          "x-name": "pageRequest",
          "description": "The page details to update, which should include the page id.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "The update page details, or a 404 not found if the existing page cannot be found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Pages"
        ],
        "summary": "Deletes an existing page from the database. This is an administrator-only action.",
        "operationId": "Pages_Delete",
        "parameters": [
          {
            "name": "pageId",
            "in": "query",
            "description": "The id of the page to remove.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "A 204 if the page successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/PageVersions/{id}": {
      "get": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/PageVersions/AllVersions": {
      "get": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_AllVersions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageVersionResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/PageVersions/FindPageVersionsByPageId": {
      "get": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_FindPageVersionsByPageId",
        "parameters": [
          {
            "name": "pageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageVersionResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/PageVersions/FindPageVersionsByAuthor": {
      "get": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_FindPageVersionsByAuthor",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageVersionResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/PageVersions/GetLatestVersion": {
      "get": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_GetLatestVersion",
        "parameters": [
          {
            "name": "pageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageVersionResponse"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/PageVersions": {
      "post": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_Add",
        "parameters": [
          {
            "name": "pageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "text",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "author",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "dateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageVersionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "PageVersions"
        ],
        "operationId": "PageVersions_Update",
        "requestBody": {
          "x-name": "pageVersionRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageVersionRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Tags/AllTags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_AllTags",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Tags/FindPageWithTag": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_FindPageWithTag",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Tags/Rename": {
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Rename",
        "parameters": [
          {
            "name": "oldTagName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "newTagName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Users/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Get",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Users/FindAll": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_FindAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Users/FindUsersWithClaim": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_FindUsersWithClaim",
        "parameters": [
          {
            "name": "claimType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "claimValue",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Users/CreateAdmin": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_CreateAdmin",
        "requestBody": {
          "x-name": "userRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Users/CreateEditor": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_CreateEditor",
        "requestBody": {
          "x-name": "userRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v3/Users/Delete": {
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Delete",
        "requestBody": {
          "x-name": "email",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorizationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "jwtToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuthorizationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "PageResponse": {
        "type": "object",
        "description": "Represents page information in Roadkill.",
        "additionalProperties": false,
        "required": [
          "title",
          "createdBy",
          "isLocked",
          "tagsAsCsv"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique Id of the page. This is generated on the server.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title of the page.",
            "minLength": 1
          },
          "seoFriendlyTitle": {
            "type": "string",
            "description": "The url-friendly slug for the page title.",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the page.",
            "minLength": 1
          },
          "createdOn": {
            "type": "string",
            "description": "The UTC-based date the page was created.",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The user who last modified the page. If the page has\nnote been modified yet, this will match the CreatedBy property.",
            "nullable": true
          },
          "lastModifiedOn": {
            "type": "string",
            "description": "The date the page was last modified on. If the page has\nnote been modified yet, this will match the creation date.",
            "format": "date-time"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the page is locked so no edits can be made (except by admins)."
          },
          "tagsAsCsv": {
            "type": "string",
            "description": "The list of tags, comma seperated, for the page.",
            "minLength": 1
          },
          "tagList": {
            "type": "array",
            "description": "The tags for the page as an array.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageRequest": {
        "type": "object",
        "description": "Represents page information in Roadkill.",
        "additionalProperties": false,
        "required": [
          "title",
          "createdBy",
          "isLocked",
          "tags"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique Id of the page. This is generated on the server.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title of the page.",
            "minLength": 1
          },
          "seoFriendlyTitle": {
            "type": "string",
            "description": "The url-friendly slug for the page title.",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the page.",
            "minLength": 1
          },
          "createdOn": {
            "type": "string",
            "description": "The UTC-based date the page was created.",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The user who last modified the page. If the page has\nnote been modified yet, this will match the CreatedBy property.",
            "nullable": true
          },
          "lastModifiedOn": {
            "type": "string",
            "description": "The date the page was last modified on. If the page has\nnote been modified yet, this will match the creation date.",
            "format": "date-time"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Whether the page is locked so no edits can be made (except by admins)."
          },
          "tags": {
            "type": "string",
            "description": "The list of tags, comma separated, for the page.",
            "minLength": 1
          }
        }
      },
      "PageVersionResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "pageId": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageVersionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "pageId": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TagResponse": {
        "type": "object",
        "description": "Provides data for the tag cloud.",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the primary key for this user.",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "Gets or sets the user name for this user.",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "description": "Gets or sets the normalized user name for this user.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the email address for this user.",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "description": "Gets or sets the normalized email address for this user.",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if a user has confirmed their email address."
          },
          "passwordHash": {
            "type": "string",
            "description": "Gets or sets a salted and hashed representation of the password for this user.",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "description": "A random value that must change whenever a users credentials change (password changed, login removed)",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "description": "A random value that must change whenever a user is persisted to the store",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Gets or sets a telephone number for the user.",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if a user has confirmed their telephone address."
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if two factor authentication is enabled for this user."
          },
          "lockoutEnd": {
            "type": "string",
            "description": "Gets or sets the date and time, in UTC, when any user lockout ends.",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if the user could be locked out."
          },
          "accessFailedCount": {
            "type": "integer",
            "description": "Gets or sets the number of failed login attempts for the current user.",
            "format": "int32"
          },
          "roleClaims": {
            "type": "array",
            "description": "Gets or sets the roles the user has associated with their login.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}. You can get a JWT token from /Authorization/Authenticate.",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}