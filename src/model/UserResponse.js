/**
 * Roadkill API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserResponse model module.
 * @module model/UserResponse
 * @version 3.0
 */
class UserResponse {
    /**
     * Constructs a new <code>UserResponse</code>.
     * @alias module:model/UserResponse
     */
    constructor() { 
        
        UserResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserResponse} obj Optional instance to populate.
     * @return {module:model/UserResponse} The populated <code>UserResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
            if (data.hasOwnProperty('normalizedUserName')) {
                obj['normalizedUserName'] = ApiClient.convertToType(data['normalizedUserName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('normalizedEmail')) {
                obj['normalizedEmail'] = ApiClient.convertToType(data['normalizedEmail'], 'String');
            }
            if (data.hasOwnProperty('emailConfirmed')) {
                obj['emailConfirmed'] = ApiClient.convertToType(data['emailConfirmed'], 'Boolean');
            }
            if (data.hasOwnProperty('passwordHash')) {
                obj['passwordHash'] = ApiClient.convertToType(data['passwordHash'], 'String');
            }
            if (data.hasOwnProperty('securityStamp')) {
                obj['securityStamp'] = ApiClient.convertToType(data['securityStamp'], 'String');
            }
            if (data.hasOwnProperty('concurrencyStamp')) {
                obj['concurrencyStamp'] = ApiClient.convertToType(data['concurrencyStamp'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('phoneNumberConfirmed')) {
                obj['phoneNumberConfirmed'] = ApiClient.convertToType(data['phoneNumberConfirmed'], 'Boolean');
            }
            if (data.hasOwnProperty('twoFactorEnabled')) {
                obj['twoFactorEnabled'] = ApiClient.convertToType(data['twoFactorEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('lockoutEnd')) {
                obj['lockoutEnd'] = ApiClient.convertToType(data['lockoutEnd'], 'Date');
            }
            if (data.hasOwnProperty('lockoutEnabled')) {
                obj['lockoutEnabled'] = ApiClient.convertToType(data['lockoutEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('accessFailedCount')) {
                obj['accessFailedCount'] = ApiClient.convertToType(data['accessFailedCount'], 'Number');
            }
            if (data.hasOwnProperty('roleClaims')) {
                obj['roleClaims'] = ApiClient.convertToType(data['roleClaims'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Gets or sets the primary key for this user.
 * @member {String} id
 */
UserResponse.prototype['id'] = undefined;

/**
 * Gets or sets the user name for this user.
 * @member {String} userName
 */
UserResponse.prototype['userName'] = undefined;

/**
 * Gets or sets the normalized user name for this user.
 * @member {String} normalizedUserName
 */
UserResponse.prototype['normalizedUserName'] = undefined;

/**
 * Gets or sets the email address for this user.
 * @member {String} email
 */
UserResponse.prototype['email'] = undefined;

/**
 * Gets or sets the normalized email address for this user.
 * @member {String} normalizedEmail
 */
UserResponse.prototype['normalizedEmail'] = undefined;

/**
 * Gets or sets a flag indicating if a user has confirmed their email address.
 * @member {Boolean} emailConfirmed
 */
UserResponse.prototype['emailConfirmed'] = undefined;

/**
 * Gets or sets a salted and hashed representation of the password for this user.
 * @member {String} passwordHash
 */
UserResponse.prototype['passwordHash'] = undefined;

/**
 * A random value that must change whenever a users credentials change (password changed, login removed)
 * @member {String} securityStamp
 */
UserResponse.prototype['securityStamp'] = undefined;

/**
 * A random value that must change whenever a user is persisted to the store
 * @member {String} concurrencyStamp
 */
UserResponse.prototype['concurrencyStamp'] = undefined;

/**
 * Gets or sets a telephone number for the user.
 * @member {String} phoneNumber
 */
UserResponse.prototype['phoneNumber'] = undefined;

/**
 * Gets or sets a flag indicating if a user has confirmed their telephone address.
 * @member {Boolean} phoneNumberConfirmed
 */
UserResponse.prototype['phoneNumberConfirmed'] = undefined;

/**
 * Gets or sets a flag indicating if two factor authentication is enabled for this user.
 * @member {Boolean} twoFactorEnabled
 */
UserResponse.prototype['twoFactorEnabled'] = undefined;

/**
 * Gets or sets the date and time, in UTC, when any user lockout ends.
 * @member {Date} lockoutEnd
 */
UserResponse.prototype['lockoutEnd'] = undefined;

/**
 * Gets or sets a flag indicating if the user could be locked out.
 * @member {Boolean} lockoutEnabled
 */
UserResponse.prototype['lockoutEnabled'] = undefined;

/**
 * Gets or sets the number of failed login attempts for the current user.
 * @member {Number} accessFailedCount
 */
UserResponse.prototype['accessFailedCount'] = undefined;

/**
 * Gets or sets the roles the user has associated with their login.
 * @member {Array.<String>} roleClaims
 */
UserResponse.prototype['roleClaims'] = undefined;






export default UserResponse;

