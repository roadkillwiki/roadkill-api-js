/**
 * Roadkill API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthorizationRequest from './model/AuthorizationRequest';
import AuthorizationResponse from './model/AuthorizationResponse';
import PageRequest from './model/PageRequest';
import PageResponse from './model/PageResponse';
import PageVersionRequest from './model/PageVersionRequest';
import PageVersionResponse from './model/PageVersionResponse';
import ProblemDetails from './model/ProblemDetails';
import TagResponse from './model/TagResponse';
import UserRequest from './model/UserRequest';
import UserResponse from './model/UserResponse';
import AuthorizationApi from './api/AuthorizationApi';
import EmailApi from './api/EmailApi';
import ExportApi from './api/ExportApi';
import InstallApi from './api/InstallApi';
import MarkdownApi from './api/MarkdownApi';
import PageVersionsApi from './api/PageVersionsApi';
import PagesApi from './api/PagesApi';
import TagsApi from './api/TagsApi';
import UsersApi from './api/UsersApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RoadkillApi = require('index'); // See note below*.
* var xxxSvc = new RoadkillApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RoadkillApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RoadkillApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RoadkillApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 3.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthorizationRequest model constructor.
     * @property {module:model/AuthorizationRequest}
     */
    AuthorizationRequest,

    /**
     * The AuthorizationResponse model constructor.
     * @property {module:model/AuthorizationResponse}
     */
    AuthorizationResponse,

    /**
     * The PageRequest model constructor.
     * @property {module:model/PageRequest}
     */
    PageRequest,

    /**
     * The PageResponse model constructor.
     * @property {module:model/PageResponse}
     */
    PageResponse,

    /**
     * The PageVersionRequest model constructor.
     * @property {module:model/PageVersionRequest}
     */
    PageVersionRequest,

    /**
     * The PageVersionResponse model constructor.
     * @property {module:model/PageVersionResponse}
     */
    PageVersionResponse,

    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails,

    /**
     * The TagResponse model constructor.
     * @property {module:model/TagResponse}
     */
    TagResponse,

    /**
     * The UserRequest model constructor.
     * @property {module:model/UserRequest}
     */
    UserRequest,

    /**
     * The UserResponse model constructor.
     * @property {module:model/UserResponse}
     */
    UserResponse,

    /**
    * The AuthorizationApi service constructor.
    * @property {module:api/AuthorizationApi}
    */
    AuthorizationApi,

    /**
    * The EmailApi service constructor.
    * @property {module:api/EmailApi}
    */
    EmailApi,

    /**
    * The ExportApi service constructor.
    * @property {module:api/ExportApi}
    */
    ExportApi,

    /**
    * The InstallApi service constructor.
    * @property {module:api/InstallApi}
    */
    InstallApi,

    /**
    * The MarkdownApi service constructor.
    * @property {module:api/MarkdownApi}
    */
    MarkdownApi,

    /**
    * The PageVersionsApi service constructor.
    * @property {module:api/PageVersionsApi}
    */
    PageVersionsApi,

    /**
    * The PagesApi service constructor.
    * @property {module:api/PagesApi}
    */
    PagesApi,

    /**
    * The TagsApi service constructor.
    * @property {module:api/TagsApi}
    */
    TagsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
