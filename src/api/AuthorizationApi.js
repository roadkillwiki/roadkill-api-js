/**
 * Roadkill API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthorizationRequest from '../model/AuthorizationRequest';
import AuthorizationResponse from '../model/AuthorizationResponse';

/**
* Authorization service.
* @module api/AuthorizationApi
* @version 3.0
*/
export default class AuthorizationApi {

    /**
    * Constructs a new AuthorizationApi. 
    * @alias module:api/AuthorizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authorizationAuthenticate operation.
     * @callback module:api/AuthorizationApi~authorizationAuthenticateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/AuthorizationRequest} authorizationRequest 
     * @param {module:api/AuthorizationApi~authorizationAuthenticateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizationResponse}
     */
    authorizationAuthenticate(authorizationRequest, callback) {
      let postBody = authorizationRequest;
      // verify the required parameter 'authorizationRequest' is set
      if (authorizationRequest === undefined || authorizationRequest === null) {
        throw new Error("Missing the required parameter 'authorizationRequest' when calling authorizationAuthenticate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWT'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AuthorizationResponse;
      return this.apiClient.callApi(
        '/v3/Authorization/Authenticate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
