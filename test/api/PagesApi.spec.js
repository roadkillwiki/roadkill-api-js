/**
 * Roadkill API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RoadkillApi);
  }
}(this, function(expect, RoadkillApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RoadkillApi.PagesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PagesApi', function() {
    describe('pagesAdd', function() {
      it('should call pagesAdd successfully', function(done) {
        //uncomment below and update the code to test pagesAdd
        //instance.pagesAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesAllPages', function() {
      it('should call pagesAllPages successfully', function(done) {
        //uncomment below and update the code to test pagesAllPages
        //instance.pagesAllPages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesAllPagesCreatedBy', function() {
      it('should call pagesAllPagesCreatedBy successfully', function(done) {
        //uncomment below and update the code to test pagesAllPagesCreatedBy
        //instance.pagesAllPagesCreatedBy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesDelete', function() {
      it('should call pagesDelete successfully', function(done) {
        //uncomment below and update the code to test pagesDelete
        //instance.pagesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesFindByTitle', function() {
      it('should call pagesFindByTitle successfully', function(done) {
        //uncomment below and update the code to test pagesFindByTitle
        //instance.pagesFindByTitle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesFindHomePage', function() {
      it('should call pagesFindHomePage successfully', function(done) {
        //uncomment below and update the code to test pagesFindHomePage
        //instance.pagesFindHomePage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesGet', function() {
      it('should call pagesGet successfully', function(done) {
        //uncomment below and update the code to test pagesGet
        //instance.pagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pagesUpdate', function() {
      it('should call pagesUpdate successfully', function(done) {
        //uncomment below and update the code to test pagesUpdate
        //instance.pagesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
